name: Test

on:
  push:
    branches: [main, SETUP]
  pull_request:
    branches: [main]

jobs:
  rpc-parity:
    name: RPC Parity Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Create virtual environment
        run: uv venv

      - name: Install dependencies
        run: uv pip install -e ".[dev,test]"

      - name: Check RPC Parity (ENFORCEMENT)
        run: |
          echo "üîç Checking RPC parity..."
          echo "This ensures all public methods are either:"
          echo "  1. Exposed via @rpc_expose decorator, OR"
          echo "  2. Explicitly excluded in INTERNAL_ONLY_METHODS"
          echo ""
          uv run pytest tests/unit/test_rpc_parity.py -v

  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Create virtual environment
        run: uv venv

      - name: Install dependencies
        run: |
          uv pip install -e ".[dev,test]"

      - name: Run tests with coverage
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            uv run pytest -n auto -m "not slow" --cov=nexus --cov-report=xml --cov-report=term-missing
          else
            uv run pytest -n auto --cov=nexus --cov-report=xml --cov-report=term-missing
          fi
        shell: bash

      - name: Check coverage threshold
        run: |
          # Improved from 60% to 65% with comprehensive workflow module tests
          # Workflow module coverage: types (100%), triggers (100%), loader (98%), storage (95%), engine (75%)
          # Some workflow actions (38%) require external services (LLM, webhooks) to fully test
          # TODO: Raise to 75% after adding tests for core modules (rebac, nexus_fs)
          uv run coverage report --fail-under=65

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
